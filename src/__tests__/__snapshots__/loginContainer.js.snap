// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Login
    user={
      Object {
        "id": 1,
        "userName": "mahk",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Redirect
          to="/user/1/commutes"
        />,
        <form
          onSubmit={[Function]}
        >
          <input
            className="input-button"
            name="userName"
            onChange={[Function]}
            placeholder="USERNAME..."
            type="text"
            value=""
          />
          <input
            className="input-button"
            name="password"
            onChange={[Function]}
            placeholder="PASSWORD..."
            type="password"
            value=""
          />
          <button
            className="form-button"
          >
            Sign In
          </button>
        </form>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "to": "/user/1/commutes",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              className="input-button"
              name="userName"
              onChange={[Function]}
              placeholder="USERNAME..."
              type="text"
              value=""
            />,
            <input
              className="input-button"
              name="password"
              onChange={[Function]}
              placeholder="PASSWORD..."
              type="password"
              value=""
            />,
            <button
              className="form-button"
            >
              Sign In
            </button>,
            undefined,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "input-button",
              "name": "userName",
              "onChange": [Function],
              "placeholder": "USERNAME...",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "input-button",
              "name": "password",
              "onChange": [Function],
              "placeholder": "PASSWORD...",
              "type": "password",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Sign In",
              "className": "form-button",
              "onClick": undefined,
            },
            "ref": null,
            "rendered": "Sign In",
            "type": "button",
          },
          undefined,
        ],
        "type": "form",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Redirect
            to="/user/1/commutes"
          />,
          <form
            onSubmit={[Function]}
          >
            <input
              className="input-button"
              name="userName"
              onChange={[Function]}
              placeholder="USERNAME..."
              type="text"
              value=""
            />
            <input
              className="input-button"
              name="password"
              onChange={[Function]}
              placeholder="PASSWORD..."
              type="password"
              value=""
            />
            <button
              className="form-button"
            >
              Sign In
            </button>
          </form>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "to": "/user/1/commutes",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                className="input-button"
                name="userName"
                onChange={[Function]}
                placeholder="USERNAME..."
                type="text"
                value=""
              />,
              <input
                className="input-button"
                name="password"
                onChange={[Function]}
                placeholder="PASSWORD..."
                type="password"
                value=""
              />,
              <button
                className="form-button"
              >
                Sign In
              </button>,
              undefined,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "input-button",
                "name": "userName",
                "onChange": [Function],
                "placeholder": "USERNAME...",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "input-button",
                "name": "password",
                "onChange": [Function],
                "placeholder": "PASSWORD...",
                "type": "password",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Sign In",
                "className": "form-button",
                "onClick": undefined,
              },
              "ref": null,
              "rendered": "Sign In",
              "type": "button",
            },
            undefined,
          ],
          "type": "form",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
